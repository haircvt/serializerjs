{"version":3,"sources":["../src/Error/SerializationError.js","../src/Error/UnexpectedTypeError.js","../src/Error/UnimplementedSerializerMethodError.js","../src/Serializer/AbstractSerializer.js","../src/Serializer/Serializer.js","../src/Serializer/SerializerAware.js","../src/Serializer/SerializerInterface.js"],"names":[],"mappings":"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","file":"serializerjs-es5.js","sourcesContent":["/*\n * This file is part of the JsSerializer package.\n *\n * (c) HAIRCVT <hello@haircvt.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/**\n * @author Théo FIDRY <theo.fidry@gmail.com>\n */\nexport default class SerializationError extends Error {\n    constructor(message) {\n        super(message);\n\n        this.name = this.constructor.name;\n        this.message = message;\n        Error.captureStackTrace(this, this.constructor.name);\n    }\n}\n","/*\n * This file is part of the JsSerializer package.\n *\n * (c) HAIRCVT <hello@haircvt.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/**\n * @author Théo FIDRY <theo.fidry@gmail.com>\n */\nexport default class UnexpectedTypeError extends Error {\n    constructor(message) {\n        super(message);\n\n        this.name = this.constructor.name;\n        this.message = message;\n        Error.captureStackTrace(this, this.constructor.name);\n    }\n}\n","/*\n * This file is part of the JsSerializer package.\n *\n * (c) HAIRCVT <hello@haircvt.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/**\n * @author Théo FIDRY <theo.fidry@gmail.com>\n */\nexport default class UnimplementedSerializerMethodError extends Error {\n    constructor(message) {\n        super(message);\n\n        this.name = this.constructor.name;\n        this.message = message;\n        Error.captureStackTrace(this, this.constructor.name);\n    }\n}\n","/*\n * This file is part of the JsSerializer package.\n *\n * (c) HAIRCVT <hello@haircvt.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport SerializerAware from './SerializerAware';\n\n/**\n * Base class that can be used for writing a custom serializer. It is especially convenient if your serializer do only\n * serialization or only deserialization. If not, it you are better off implementing SerializerAwareInterface or\n * SerializerInterface.\n *\n * @abstract\n * @author Théo FIDRY <theo.fidry@gmail.com>\n */\nexport default class AbstractSerializer extends SerializerAware {\n    /**\n     * @inheritDoc\n     */\n    serialize(data, format, context) {\n        return data;\n    }\n\n    /**\n     * @inheritDoc\n     */\n    supportsSerialize(data, format = null) {\n        return false;\n    }\n\n    /**\n     * @inheritDoc\n     */\n    deserialize(data, className, format = null, context = null) {\n        return data;\n    }\n\n    /**\n     * @inheritDoc\n     */\n    supportsDeserialize(data, className, format = null) {\n        return false;\n    }\n}\n","/*\n * This file is part of the JsSerializer package.\n *\n * (c) HAIRCVT <hello@haircvt.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport SerializerAware from './SerializerAware';\nimport SerializerInterface from './SerializerInterface';\nimport SerializationError from './../Error/SerializationError';\nimport UnexpectedTypeError from './../Error/UnexpectedTypeError';\n\n/**\n * Default serializer.\n *\n * Meant to aggregate all the application serializers and be used as the main serializer in the application. This means\n * that for serializing a new object, a custom serializer for this one should be done and registered to this serializer.\n *\n * @author Théo FIDRY <theo.fidry@gmail.com>\n */\nexport default class Serializer extends SerializerInterface {\n    /**\n     * @param {Map.<string,SerializerInterface>} serializers\n     */\n    constructor(serializers) {\n        super(serializers);\n\n        for (const serializer of serializers.values()) {\n            if (false === serializer instanceof SerializerInterface) {\n                throw new UnexpectedTypeError(\n                    `Expected serializer to implement SerializerInterface. Got ${serializer.constructor} instead`\n                );\n            }\n\n            if (serializer instanceof SerializerAware) {\n                serializer.setSerializer(this);\n            }\n        }\n\n        /**\n         * @type {Map.<string, SerializerInterface>}\n         * @private\n         */\n        this._serializers = serializers;\n    }\n\n    /**\n     * @inheritDoc\n     */\n    serialize(data, format, context) {\n        const serializer = this._getSerializerForSerialization(data, format, context);\n        if (null !== serializer) {\n            return serializer.serialize(data, format, context);\n        }\n\n        throw new SerializationError(`An unexpected value could not be serialized: \"${data}\"`);\n    }\n\n    /**\n     * @inheritDoc\n     */\n    supportsSerialize(data, format = null) {\n        return null !== this._getSerializerForSerialization(data, format);\n    }\n\n    /**\n     * @inheritDoc\n     */\n    deserialize(data, className, format = null, context = null) {\n        const serializer = this._getSerializerForDeserialization(data, className, format);\n        if (null !== serializer) {\n            return serializer.deserialize(data, className, format, context);\n        }\n\n        throw new SerializationError(`An unexpected value could not be deserialized: \"${data}\"`);\n    }\n\n    /**\n     * @inheritDocz\n     */\n    supportsDeserialize(data, className, format = null) {\n        return null !== this._getSerializerForDeserialization(data, className, format);\n    }\n\n    /**\n     * @param {*}      data          Any data\n     * @param {string} [format=null] Format the normalization result will be encoded as\n     *\n     * @return {?SerializerInterface}\n     * @private\n     */\n    _getSerializerForSerialization(data, format = null) {\n        for (const serializer of this._serializers.values()) {\n            if (true === serializer.supportsSerialize(data, format)) {\n                return serializer;\n            }\n        }\n\n        return null;\n    }\n\n    /**\n     * @param {*}       data      Data to restore\n     * @param {string}  className The expected class to instantiate\n     * @param {?string} format    Format the given data was extracted from\n     *\n     * @return {?SerializerInterface}\n     * @private\n     */\n    _getSerializerForDeserialization(data, className, format) {\n        for (const serializer of this._serializers.values()) {\n            if (true === serializer.supportsDeserialize(data, className, format)) {\n                return serializer;\n            }\n        }\n\n        return null;\n    }\n}\n","/*\n * This file is part of the JsSerializer package.\n *\n * (c) HAIRCVT <hello@haircvt.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport SerializerInterface from './SerializerInterface';\n\n/**\n * Any serializer implementing this interface will access to a serializer at runtime.\n *\n * @author Théo FIDRY <theo.fidry@gmail.com>\n */\nexport default class SerializerAware extends SerializerInterface {\n    constructor() {\n        super();\n\n        /**\n         * @type {SerializerInterface}\n         * @protected\n         */\n        this._serializer = undefined;\n    }\n    /**\n     * @param {SerializerInterface} serializer\n     */\n    setSerializer(serializer) {\n        this._serializer = serializer;\n    }\n}\n","/*\n * This file is part of the JsSerializer package.\n *\n * (c) HAIRCVT <hello@haircvt.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport SerializationError from './../Error/SerializationError';\nimport UnimplementedSerializerMethodError from './../Error/UnimplementedSerializerMethodError';\n\n/**\n * A serializer is responsible for transforming a data in a specific format into a data in another format.\n *\n * For example, the serializer can be used to map client-side models and back-end side objects by checking all the\n * properties of a model to generate an object for which the values are understandable for the back-end service.\n *\n * +--------+ ----- serialize -----> +----------+\n * | Client |                        | Back-End |\n * +--------+ <---- deserialize ---- +----------+\n *\n * Note that JavaScript does not support interfaces per se. But \"Interface\" it is meant that this class should not\n * implement any method but provide the skeleton for child classes instead.\n *\n * @interface\n * @author Théo FIDRY <theo.fidry@gmail.com>\n */\nexport default class SerializerInterface {\n    /**\n     * Serializes any data object into and object usable for the backend service.\n     *\n     * @param {*}      data    Any data\n     * @param {string} format  Format the normalization result will be encoded as\n     * @param {*}      context Options serializers have access to\n     *\n     * @return {*}\n     * @throw SerializationError\n     */\n    serialize(data, format, context) {\n        throw new UnimplementedSerializerMethodError('Unimplemented \"serialize()\" method');\n    }\n\n    /**\n     * Checks whether the given class is supported for serialization by this serializer.\n     *\n     * @param {*}      data          Any data\n     * @param {string} [format=null] Format the normalization result will be encoded as\n     *\n     * @return {boolean}\n     */\n    supportsSerialize(data, format = null) {\n        throw new UnimplementedSerializerMethodError('Unimplemented \"supportsSerialize()\" method');\n    }\n\n    /**\n     * Deserializes data back into an object of the given class.\n     *\n     * @param {*}       data             Data to restore\n     * @param {string}  className        The expected class to instantiate\n     * @param {?string} [format=null]    Format the given data was extracted from\n     * @param {*}       [context=null]   Options available to the deserializer\n     *\n     * @return {*}\n     * @throw SerializationError\n     */\n    deserialize(data, className, format = null, context = null) {\n        throw new UnimplementedSerializerMethodError('Unimplemented \"deserialize()\" method');\n    }\n\n    /**\n     * Checks whether the given class is supported for deserialization by this serializer.\n     *\n     * @param {*}       data          Data to restore\n     * @param {string}  className     The expected class to instantiate\n     * @param {?string} [format=null] Format the given data was extracted from\n     *\n     * @return {boolean}\n     */\n    supportsDeserialize(data, className, format = null) {\n        throw new UnimplementedSerializerMethodError('Unimplemented \"supportsDeserialize()\" method');\n    }\n}\n"]}
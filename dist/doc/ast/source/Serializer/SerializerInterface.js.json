{
  "type": "Program",
  "body": [
    {
      "type": "ImportDeclaration",
      "specifiers": [
        {
          "type": "ImportDefaultSpecifier",
          "local": {
            "type": "Identifier",
            "name": "SerializationError",
            "range": [
              233,
              251
            ],
            "loc": {
              "start": {
                "line": 10,
                "column": 7
              },
              "end": {
                "line": 10,
                "column": 25
              }
            }
          },
          "range": [
            233,
            251
          ],
          "loc": {
            "start": {
              "line": 10,
              "column": 7
            },
            "end": {
              "line": 10,
              "column": 25
            }
          }
        }
      ],
      "source": {
        "type": "Literal",
        "value": "./../Error/SerializationError",
        "raw": "'./../Error/SerializationError'",
        "range": [
          257,
          288
        ],
        "loc": {
          "start": {
            "line": 10,
            "column": 31
          },
          "end": {
            "line": 10,
            "column": 62
          }
        }
      },
      "range": [
        226,
        289
      ],
      "loc": {
        "start": {
          "line": 10,
          "column": 0
        },
        "end": {
          "line": 10,
          "column": 63
        }
      },
      "leadingComments": [
        {
          "type": "Block",
          "value": "\n * This file is part of the JsSerializer package.\n *\n * (c) HAIRCVT <hello@haircvt.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n ",
          "range": [
            0,
            224
          ],
          "loc": {
            "start": {
              "line": 1,
              "column": 0
            },
            "end": {
              "line": 8,
              "column": 3
            }
          }
        }
      ]
    },
    {
      "type": "ImportDeclaration",
      "specifiers": [
        {
          "type": "ImportDefaultSpecifier",
          "local": {
            "type": "Identifier",
            "name": "UnimplementedSerializerMethodError",
            "range": [
              297,
              331
            ],
            "loc": {
              "start": {
                "line": 11,
                "column": 7
              },
              "end": {
                "line": 11,
                "column": 41
              }
            }
          },
          "range": [
            297,
            331
          ],
          "loc": {
            "start": {
              "line": 11,
              "column": 7
            },
            "end": {
              "line": 11,
              "column": 41
            }
          }
        }
      ],
      "source": {
        "type": "Literal",
        "value": "./../Error/UnimplementedSerializerMethodError",
        "raw": "'./../Error/UnimplementedSerializerMethodError'",
        "range": [
          337,
          384
        ],
        "loc": {
          "start": {
            "line": 11,
            "column": 47
          },
          "end": {
            "line": 11,
            "column": 94
          }
        }
      },
      "range": [
        290,
        385
      ],
      "loc": {
        "start": {
          "line": 11,
          "column": 0
        },
        "end": {
          "line": 11,
          "column": 95
        }
      },
      "trailingComments": [
        {
          "type": "Block",
          "value": "*\n * A serializer is responsible for transforming a data in a specific format into a data in another format.\n *\n * For example, the serializer can be used to map client-side models and back-end side objects by checking all the\n * properties of a model to generate an object for which the values are understandable for the back-end service.\n *\n * +--------+ ----- serialize -----> +----------+\n * | Client |                        | Back-End |\n * +--------+ <---- deserialize ---- +----------+\n *\n * Note that JavaScript does not support interfaces per se. But \"Interface\" it is meant that this class should not\n * implement any method but provide the skeleton for child classes instead.\n *\n * @interface\n * @author ThÃ©o FIDRY <theo.fidry@gmail.com>\n ",
          "range": [
            387,
            1141
          ],
          "loc": {
            "start": {
              "line": 13,
              "column": 0
            },
            "end": {
              "line": 28,
              "column": 3
            }
          }
        }
      ]
    },
    {
      "type": "ExportDefaultDeclaration",
      "declaration": {
        "type": "ClassDeclaration",
        "id": {
          "type": "Identifier",
          "name": "SerializerInterface",
          "range": [
            1163,
            1182
          ],
          "loc": {
            "start": {
              "line": 29,
              "column": 21
            },
            "end": {
              "line": 29,
              "column": 40
            }
          }
        },
        "superClass": null,
        "body": {
          "type": "ClassBody",
          "body": [
            {
              "type": "MethodDefinition",
              "key": {
                "type": "Identifier",
                "name": "serialize",
                "range": [
                  1541,
                  1550
                ],
                "loc": {
                  "start": {
                    "line": 40,
                    "column": 4
                  },
                  "end": {
                    "line": 40,
                    "column": 13
                  }
                }
              },
              "value": {
                "type": "FunctionExpression",
                "id": null,
                "params": [
                  {
                    "type": "Identifier",
                    "name": "data",
                    "range": [
                      1551,
                      1555
                    ],
                    "loc": {
                      "start": {
                        "line": 40,
                        "column": 14
                      },
                      "end": {
                        "line": 40,
                        "column": 18
                      }
                    }
                  },
                  {
                    "type": "Identifier",
                    "name": "format",
                    "range": [
                      1557,
                      1563
                    ],
                    "loc": {
                      "start": {
                        "line": 40,
                        "column": 20
                      },
                      "end": {
                        "line": 40,
                        "column": 26
                      }
                    }
                  },
                  {
                    "type": "Identifier",
                    "name": "context",
                    "range": [
                      1565,
                      1572
                    ],
                    "loc": {
                      "start": {
                        "line": 40,
                        "column": 28
                      },
                      "end": {
                        "line": 40,
                        "column": 35
                      }
                    }
                  }
                ],
                "body": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "ThrowStatement",
                      "argument": {
                        "type": "NewExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "UnimplementedSerializerMethodError",
                          "range": [
                            1594,
                            1628
                          ],
                          "loc": {
                            "start": {
                              "line": 41,
                              "column": 18
                            },
                            "end": {
                              "line": 41,
                              "column": 52
                            }
                          }
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": "Unimplemented \"serialize()\" method",
                            "raw": "'Unimplemented \"serialize()\" method'",
                            "range": [
                              1629,
                              1665
                            ],
                            "loc": {
                              "start": {
                                "line": 41,
                                "column": 53
                              },
                              "end": {
                                "line": 41,
                                "column": 89
                              }
                            }
                          }
                        ],
                        "range": [
                          1590,
                          1666
                        ],
                        "loc": {
                          "start": {
                            "line": 41,
                            "column": 14
                          },
                          "end": {
                            "line": 41,
                            "column": 90
                          }
                        }
                      },
                      "range": [
                        1584,
                        1667
                      ],
                      "loc": {
                        "start": {
                          "line": 41,
                          "column": 8
                        },
                        "end": {
                          "line": 41,
                          "column": 91
                        }
                      }
                    }
                  ],
                  "range": [
                    1574,
                    1673
                  ],
                  "loc": {
                    "start": {
                      "line": 40,
                      "column": 37
                    },
                    "end": {
                      "line": 42,
                      "column": 5
                    }
                  }
                },
                "generator": false,
                "expression": false,
                "range": [
                  1550,
                  1673
                ],
                "loc": {
                  "start": {
                    "line": 40,
                    "column": 13
                  },
                  "end": {
                    "line": 42,
                    "column": 5
                  }
                }
              },
              "kind": "method",
              "computed": false,
              "range": [
                1541,
                1673
              ],
              "loc": {
                "start": {
                  "line": 40,
                  "column": 4
                },
                "end": {
                  "line": 42,
                  "column": 5
                }
              },
              "leadingComments": [
                {
                  "type": "Block",
                  "value": "*\n     * Serializes any data object into and object usable for the backend service.\n     *\n     * @param {*}      data    Any data\n     * @param {string} format  Format the normalization result will be encoded as\n     * @param {*}      context Options serializers have access to\n     *\n     * @return {*}\n     * @throw SerializationError\n     ",
                  "range": [
                    1189,
                    1536
                  ],
                  "loc": {
                    "start": {
                      "line": 30,
                      "column": 4
                    },
                    "end": {
                      "line": 39,
                      "column": 7
                    }
                  }
                }
              ],
              "trailingComments": [
                {
                  "type": "Block",
                  "value": "*\n     * Checks whether the given class is supported for serialization by this serializer.\n     *\n     * @param {*}      data          Any data\n     * @param {string} [format=null] Format the normalization result will be encoded as\n     *\n     * @return {boolean}\n     ",
                  "range": [
                    1679,
                    1952
                  ],
                  "loc": {
                    "start": {
                      "line": 44,
                      "column": 4
                    },
                    "end": {
                      "line": 51,
                      "column": 7
                    }
                  }
                }
              ],
              "static": false
            },
            {
              "type": "MethodDefinition",
              "key": {
                "type": "Identifier",
                "name": "supportsSerialize",
                "range": [
                  1957,
                  1974
                ],
                "loc": {
                  "start": {
                    "line": 52,
                    "column": 4
                  },
                  "end": {
                    "line": 52,
                    "column": 21
                  }
                }
              },
              "value": {
                "type": "FunctionExpression",
                "id": null,
                "params": [
                  {
                    "type": "Identifier",
                    "name": "data",
                    "range": [
                      1975,
                      1979
                    ],
                    "loc": {
                      "start": {
                        "line": 52,
                        "column": 22
                      },
                      "end": {
                        "line": 52,
                        "column": 26
                      }
                    }
                  },
                  {
                    "type": "AssignmentPattern",
                    "left": {
                      "type": "Identifier",
                      "name": "format",
                      "range": [
                        1981,
                        1987
                      ],
                      "loc": {
                        "start": {
                          "line": 52,
                          "column": 28
                        },
                        "end": {
                          "line": 52,
                          "column": 34
                        }
                      }
                    },
                    "right": {
                      "type": "Literal",
                      "value": null,
                      "raw": "null",
                      "range": [
                        1990,
                        1994
                      ],
                      "loc": {
                        "start": {
                          "line": 52,
                          "column": 37
                        },
                        "end": {
                          "line": 52,
                          "column": 41
                        }
                      }
                    },
                    "range": [
                      1981,
                      1994
                    ],
                    "loc": {
                      "start": {
                        "line": 52,
                        "column": 28
                      },
                      "end": {
                        "line": 52,
                        "column": 41
                      }
                    }
                  }
                ],
                "body": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "ThrowStatement",
                      "argument": {
                        "type": "NewExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "UnimplementedSerializerMethodError",
                          "range": [
                            2016,
                            2050
                          ],
                          "loc": {
                            "start": {
                              "line": 53,
                              "column": 18
                            },
                            "end": {
                              "line": 53,
                              "column": 52
                            }
                          }
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": "Unimplemented \"supportsSerialize()\" method",
                            "raw": "'Unimplemented \"supportsSerialize()\" method'",
                            "range": [
                              2051,
                              2095
                            ],
                            "loc": {
                              "start": {
                                "line": 53,
                                "column": 53
                              },
                              "end": {
                                "line": 53,
                                "column": 97
                              }
                            }
                          }
                        ],
                        "range": [
                          2012,
                          2096
                        ],
                        "loc": {
                          "start": {
                            "line": 53,
                            "column": 14
                          },
                          "end": {
                            "line": 53,
                            "column": 98
                          }
                        }
                      },
                      "range": [
                        2006,
                        2097
                      ],
                      "loc": {
                        "start": {
                          "line": 53,
                          "column": 8
                        },
                        "end": {
                          "line": 53,
                          "column": 99
                        }
                      }
                    }
                  ],
                  "range": [
                    1996,
                    2103
                  ],
                  "loc": {
                    "start": {
                      "line": 52,
                      "column": 43
                    },
                    "end": {
                      "line": 54,
                      "column": 5
                    }
                  }
                },
                "generator": false,
                "expression": false,
                "range": [
                  1974,
                  2103
                ],
                "loc": {
                  "start": {
                    "line": 52,
                    "column": 21
                  },
                  "end": {
                    "line": 54,
                    "column": 5
                  }
                }
              },
              "kind": "method",
              "computed": false,
              "range": [
                1957,
                2103
              ],
              "loc": {
                "start": {
                  "line": 52,
                  "column": 4
                },
                "end": {
                  "line": 54,
                  "column": 5
                }
              },
              "leadingComments": [
                {
                  "type": "Block",
                  "value": "*\n     * Checks whether the given class is supported for serialization by this serializer.\n     *\n     * @param {*}      data          Any data\n     * @param {string} [format=null] Format the normalization result will be encoded as\n     *\n     * @return {boolean}\n     ",
                  "range": [
                    1679,
                    1952
                  ],
                  "loc": {
                    "start": {
                      "line": 44,
                      "column": 4
                    },
                    "end": {
                      "line": 51,
                      "column": 7
                    }
                  }
                }
              ],
              "trailingComments": [
                {
                  "type": "Block",
                  "value": "*\n     * Deserializes data back into an object of the given class.\n     *\n     * @param {*}       data             Data to restore\n     * @param {string}  className        The expected class to instantiate\n     * @param {?string} [format=null]    Format the given data was extracted from\n     * @param {*}       [context=null]   Options available to the deserializer\n     *\n     * @return {*}\n     * @throw SerializationError\n     ",
                  "range": [
                    2109,
                    2544
                  ],
                  "loc": {
                    "start": {
                      "line": 56,
                      "column": 4
                    },
                    "end": {
                      "line": 66,
                      "column": 7
                    }
                  }
                }
              ],
              "static": false
            },
            {
              "type": "MethodDefinition",
              "key": {
                "type": "Identifier",
                "name": "deserialize",
                "range": [
                  2549,
                  2560
                ],
                "loc": {
                  "start": {
                    "line": 67,
                    "column": 4
                  },
                  "end": {
                    "line": 67,
                    "column": 15
                  }
                }
              },
              "value": {
                "type": "FunctionExpression",
                "id": null,
                "params": [
                  {
                    "type": "Identifier",
                    "name": "data",
                    "range": [
                      2561,
                      2565
                    ],
                    "loc": {
                      "start": {
                        "line": 67,
                        "column": 16
                      },
                      "end": {
                        "line": 67,
                        "column": 20
                      }
                    }
                  },
                  {
                    "type": "Identifier",
                    "name": "className",
                    "range": [
                      2567,
                      2576
                    ],
                    "loc": {
                      "start": {
                        "line": 67,
                        "column": 22
                      },
                      "end": {
                        "line": 67,
                        "column": 31
                      }
                    }
                  },
                  {
                    "type": "AssignmentPattern",
                    "left": {
                      "type": "Identifier",
                      "name": "format",
                      "range": [
                        2578,
                        2584
                      ],
                      "loc": {
                        "start": {
                          "line": 67,
                          "column": 33
                        },
                        "end": {
                          "line": 67,
                          "column": 39
                        }
                      }
                    },
                    "right": {
                      "type": "Literal",
                      "value": null,
                      "raw": "null",
                      "range": [
                        2587,
                        2591
                      ],
                      "loc": {
                        "start": {
                          "line": 67,
                          "column": 42
                        },
                        "end": {
                          "line": 67,
                          "column": 46
                        }
                      }
                    },
                    "range": [
                      2578,
                      2591
                    ],
                    "loc": {
                      "start": {
                        "line": 67,
                        "column": 33
                      },
                      "end": {
                        "line": 67,
                        "column": 46
                      }
                    }
                  },
                  {
                    "type": "AssignmentPattern",
                    "left": {
                      "type": "Identifier",
                      "name": "context",
                      "range": [
                        2593,
                        2600
                      ],
                      "loc": {
                        "start": {
                          "line": 67,
                          "column": 48
                        },
                        "end": {
                          "line": 67,
                          "column": 55
                        }
                      }
                    },
                    "right": {
                      "type": "Literal",
                      "value": null,
                      "raw": "null",
                      "range": [
                        2603,
                        2607
                      ],
                      "loc": {
                        "start": {
                          "line": 67,
                          "column": 58
                        },
                        "end": {
                          "line": 67,
                          "column": 62
                        }
                      }
                    },
                    "range": [
                      2593,
                      2607
                    ],
                    "loc": {
                      "start": {
                        "line": 67,
                        "column": 48
                      },
                      "end": {
                        "line": 67,
                        "column": 62
                      }
                    }
                  }
                ],
                "body": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "ThrowStatement",
                      "argument": {
                        "type": "NewExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "UnimplementedSerializerMethodError",
                          "range": [
                            2629,
                            2663
                          ],
                          "loc": {
                            "start": {
                              "line": 68,
                              "column": 18
                            },
                            "end": {
                              "line": 68,
                              "column": 52
                            }
                          }
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": "Unimplemented \"deserialize()\" method",
                            "raw": "'Unimplemented \"deserialize()\" method'",
                            "range": [
                              2664,
                              2702
                            ],
                            "loc": {
                              "start": {
                                "line": 68,
                                "column": 53
                              },
                              "end": {
                                "line": 68,
                                "column": 91
                              }
                            }
                          }
                        ],
                        "range": [
                          2625,
                          2703
                        ],
                        "loc": {
                          "start": {
                            "line": 68,
                            "column": 14
                          },
                          "end": {
                            "line": 68,
                            "column": 92
                          }
                        }
                      },
                      "range": [
                        2619,
                        2704
                      ],
                      "loc": {
                        "start": {
                          "line": 68,
                          "column": 8
                        },
                        "end": {
                          "line": 68,
                          "column": 93
                        }
                      }
                    }
                  ],
                  "range": [
                    2609,
                    2710
                  ],
                  "loc": {
                    "start": {
                      "line": 67,
                      "column": 64
                    },
                    "end": {
                      "line": 69,
                      "column": 5
                    }
                  }
                },
                "generator": false,
                "expression": false,
                "range": [
                  2560,
                  2710
                ],
                "loc": {
                  "start": {
                    "line": 67,
                    "column": 15
                  },
                  "end": {
                    "line": 69,
                    "column": 5
                  }
                }
              },
              "kind": "method",
              "computed": false,
              "range": [
                2549,
                2710
              ],
              "loc": {
                "start": {
                  "line": 67,
                  "column": 4
                },
                "end": {
                  "line": 69,
                  "column": 5
                }
              },
              "leadingComments": [
                {
                  "type": "Block",
                  "value": "*\n     * Deserializes data back into an object of the given class.\n     *\n     * @param {*}       data             Data to restore\n     * @param {string}  className        The expected class to instantiate\n     * @param {?string} [format=null]    Format the given data was extracted from\n     * @param {*}       [context=null]   Options available to the deserializer\n     *\n     * @return {*}\n     * @throw SerializationError\n     ",
                  "range": [
                    2109,
                    2544
                  ],
                  "loc": {
                    "start": {
                      "line": 56,
                      "column": 4
                    },
                    "end": {
                      "line": 66,
                      "column": 7
                    }
                  }
                }
              ],
              "trailingComments": [
                {
                  "type": "Block",
                  "value": "*\n     * Checks whether the given class is supported for deserialization by this serializer.\n     *\n     * @param {*}       data          Data to restore\n     * @param {string}  className     The expected class to instantiate\n     * @param {?string} [format=null] Format the given data was extracted from\n     *\n     * @return {boolean}\n     ",
                  "range": [
                    2716,
                    3062
                  ],
                  "loc": {
                    "start": {
                      "line": 71,
                      "column": 4
                    },
                    "end": {
                      "line": 79,
                      "column": 7
                    }
                  }
                }
              ],
              "static": false
            },
            {
              "type": "MethodDefinition",
              "key": {
                "type": "Identifier",
                "name": "supportsDeserialize",
                "range": [
                  3067,
                  3086
                ],
                "loc": {
                  "start": {
                    "line": 80,
                    "column": 4
                  },
                  "end": {
                    "line": 80,
                    "column": 23
                  }
                }
              },
              "value": {
                "type": "FunctionExpression",
                "id": null,
                "params": [
                  {
                    "type": "Identifier",
                    "name": "data",
                    "range": [
                      3087,
                      3091
                    ],
                    "loc": {
                      "start": {
                        "line": 80,
                        "column": 24
                      },
                      "end": {
                        "line": 80,
                        "column": 28
                      }
                    }
                  },
                  {
                    "type": "Identifier",
                    "name": "className",
                    "range": [
                      3093,
                      3102
                    ],
                    "loc": {
                      "start": {
                        "line": 80,
                        "column": 30
                      },
                      "end": {
                        "line": 80,
                        "column": 39
                      }
                    }
                  },
                  {
                    "type": "AssignmentPattern",
                    "left": {
                      "type": "Identifier",
                      "name": "format",
                      "range": [
                        3104,
                        3110
                      ],
                      "loc": {
                        "start": {
                          "line": 80,
                          "column": 41
                        },
                        "end": {
                          "line": 80,
                          "column": 47
                        }
                      }
                    },
                    "right": {
                      "type": "Literal",
                      "value": null,
                      "raw": "null",
                      "range": [
                        3113,
                        3117
                      ],
                      "loc": {
                        "start": {
                          "line": 80,
                          "column": 50
                        },
                        "end": {
                          "line": 80,
                          "column": 54
                        }
                      }
                    },
                    "range": [
                      3104,
                      3117
                    ],
                    "loc": {
                      "start": {
                        "line": 80,
                        "column": 41
                      },
                      "end": {
                        "line": 80,
                        "column": 54
                      }
                    }
                  }
                ],
                "body": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "ThrowStatement",
                      "argument": {
                        "type": "NewExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "UnimplementedSerializerMethodError",
                          "range": [
                            3139,
                            3173
                          ],
                          "loc": {
                            "start": {
                              "line": 81,
                              "column": 18
                            },
                            "end": {
                              "line": 81,
                              "column": 52
                            }
                          }
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": "Unimplemented \"supportsDeserialize()\" method",
                            "raw": "'Unimplemented \"supportsDeserialize()\" method'",
                            "range": [
                              3174,
                              3220
                            ],
                            "loc": {
                              "start": {
                                "line": 81,
                                "column": 53
                              },
                              "end": {
                                "line": 81,
                                "column": 99
                              }
                            }
                          }
                        ],
                        "range": [
                          3135,
                          3221
                        ],
                        "loc": {
                          "start": {
                            "line": 81,
                            "column": 14
                          },
                          "end": {
                            "line": 81,
                            "column": 100
                          }
                        }
                      },
                      "range": [
                        3129,
                        3222
                      ],
                      "loc": {
                        "start": {
                          "line": 81,
                          "column": 8
                        },
                        "end": {
                          "line": 81,
                          "column": 101
                        }
                      }
                    }
                  ],
                  "range": [
                    3119,
                    3228
                  ],
                  "loc": {
                    "start": {
                      "line": 80,
                      "column": 56
                    },
                    "end": {
                      "line": 82,
                      "column": 5
                    }
                  }
                },
                "generator": false,
                "expression": false,
                "range": [
                  3086,
                  3228
                ],
                "loc": {
                  "start": {
                    "line": 80,
                    "column": 23
                  },
                  "end": {
                    "line": 82,
                    "column": 5
                  }
                }
              },
              "kind": "method",
              "computed": false,
              "range": [
                3067,
                3228
              ],
              "loc": {
                "start": {
                  "line": 80,
                  "column": 4
                },
                "end": {
                  "line": 82,
                  "column": 5
                }
              },
              "leadingComments": [
                {
                  "type": "Block",
                  "value": "*\n     * Checks whether the given class is supported for deserialization by this serializer.\n     *\n     * @param {*}       data          Data to restore\n     * @param {string}  className     The expected class to instantiate\n     * @param {?string} [format=null] Format the given data was extracted from\n     *\n     * @return {boolean}\n     ",
                  "range": [
                    2716,
                    3062
                  ],
                  "loc": {
                    "start": {
                      "line": 71,
                      "column": 4
                    },
                    "end": {
                      "line": 79,
                      "column": 7
                    }
                  }
                }
              ],
              "static": false
            }
          ],
          "range": [
            1183,
            3230
          ],
          "loc": {
            "start": {
              "line": 29,
              "column": 41
            },
            "end": {
              "line": 83,
              "column": 1
            }
          }
        },
        "range": [
          1157,
          3230
        ],
        "loc": {
          "start": {
            "line": 29,
            "column": 15
          },
          "end": {
            "line": 83,
            "column": 1
          }
        },
        "leadingComments": [
          {
            "type": "Block",
            "value": "*\n * A serializer is responsible for transforming a data in a specific format into a data in another format.\n *\n * For example, the serializer can be used to map client-side models and back-end side objects by checking all the\n * properties of a model to generate an object for which the values are understandable for the back-end service.\n *\n * +--------+ ----- serialize -----> +----------+\n * | Client |                        | Back-End |\n * +--------+ <---- deserialize ---- +----------+\n *\n * Note that JavaScript does not support interfaces per se. But \"Interface\" it is meant that this class should not\n * implement any method but provide the skeleton for child classes instead.\n *\n * @interface\n * @author ThÃ©o FIDRY <theo.fidry@gmail.com>\n ",
            "range": [
              387,
              1141
            ],
            "loc": {
              "start": {
                "line": 13,
                "column": 0
              },
              "end": {
                "line": 28,
                "column": 3
              }
            }
          }
        ],
        "trailingComments": []
      },
      "range": [
        1142,
        3230
      ],
      "loc": {
        "start": {
          "line": 29,
          "column": 0
        },
        "end": {
          "line": 83,
          "column": 1
        }
      },
      "leadingComments": [
        {
          "type": "Block",
          "value": "*\n * A serializer is responsible for transforming a data in a specific format into a data in another format.\n *\n * For example, the serializer can be used to map client-side models and back-end side objects by checking all the\n * properties of a model to generate an object for which the values are understandable for the back-end service.\n *\n * +--------+ ----- serialize -----> +----------+\n * | Client |                        | Back-End |\n * +--------+ <---- deserialize ---- +----------+\n *\n * Note that JavaScript does not support interfaces per se. But \"Interface\" it is meant that this class should not\n * implement any method but provide the skeleton for child classes instead.\n *\n * @interface\n * @author ThÃ©o FIDRY <theo.fidry@gmail.com>\n ",
          "range": [
            387,
            1141
          ],
          "loc": {
            "start": {
              "line": 13,
              "column": 0
            },
            "end": {
              "line": 28,
              "column": 3
            }
          }
        }
      ]
    }
  ],
  "sourceType": "module",
  "range": [
    226,
    3230
  ],
  "loc": {
    "start": {
      "line": 10,
      "column": 0
    },
    "end": {
      "line": 83,
      "column": 1
    }
  },
  "comments": [
    {
      "type": "Block",
      "value": "\n * This file is part of the JsSerializer package.\n *\n * (c) HAIRCVT <hello@haircvt.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n ",
      "range": [
        0,
        224
      ],
      "loc": {
        "start": {
          "line": 1,
          "column": 0
        },
        "end": {
          "line": 8,
          "column": 3
        }
      }
    },
    {
      "type": "Block",
      "value": "*\n * A serializer is responsible for transforming a data in a specific format into a data in another format.\n *\n * For example, the serializer can be used to map client-side models and back-end side objects by checking all the\n * properties of a model to generate an object for which the values are understandable for the back-end service.\n *\n * +--------+ ----- serialize -----> +----------+\n * | Client |                        | Back-End |\n * +--------+ <---- deserialize ---- +----------+\n *\n * Note that JavaScript does not support interfaces per se. But \"Interface\" it is meant that this class should not\n * implement any method but provide the skeleton for child classes instead.\n *\n * @interface\n * @author ThÃ©o FIDRY <theo.fidry@gmail.com>\n ",
      "range": [
        387,
        1141
      ],
      "loc": {
        "start": {
          "line": 13,
          "column": 0
        },
        "end": {
          "line": 28,
          "column": 3
        }
      }
    },
    {
      "type": "Block",
      "value": "*\n     * Serializes any data object into and object usable for the backend service.\n     *\n     * @param {*}      data    Any data\n     * @param {string} format  Format the normalization result will be encoded as\n     * @param {*}      context Options serializers have access to\n     *\n     * @return {*}\n     * @throw SerializationError\n     ",
      "range": [
        1189,
        1536
      ],
      "loc": {
        "start": {
          "line": 30,
          "column": 4
        },
        "end": {
          "line": 39,
          "column": 7
        }
      }
    },
    {
      "type": "Block",
      "value": "*\n     * Checks whether the given class is supported for serialization by this serializer.\n     *\n     * @param {*}      data          Any data\n     * @param {string} [format=null] Format the normalization result will be encoded as\n     *\n     * @return {boolean}\n     ",
      "range": [
        1679,
        1952
      ],
      "loc": {
        "start": {
          "line": 44,
          "column": 4
        },
        "end": {
          "line": 51,
          "column": 7
        }
      }
    },
    {
      "type": "Block",
      "value": "*\n     * Deserializes data back into an object of the given class.\n     *\n     * @param {*}       data             Data to restore\n     * @param {string}  className        The expected class to instantiate\n     * @param {?string} [format=null]    Format the given data was extracted from\n     * @param {*}       [context=null]   Options available to the deserializer\n     *\n     * @return {*}\n     * @throw SerializationError\n     ",
      "range": [
        2109,
        2544
      ],
      "loc": {
        "start": {
          "line": 56,
          "column": 4
        },
        "end": {
          "line": 66,
          "column": 7
        }
      }
    },
    {
      "type": "Block",
      "value": "*\n     * Checks whether the given class is supported for deserialization by this serializer.\n     *\n     * @param {*}       data          Data to restore\n     * @param {string}  className     The expected class to instantiate\n     * @param {?string} [format=null] Format the given data was extracted from\n     *\n     * @return {boolean}\n     ",
      "range": [
        2716,
        3062
      ],
      "loc": {
        "start": {
          "line": 71,
          "column": 4
        },
        "end": {
          "line": 79,
          "column": 7
        }
      }
    }
  ]
}
{
  "type": "Program",
  "body": [
    {
      "type": "ImportDeclaration",
      "specifiers": [
        {
          "type": "ImportDefaultSpecifier",
          "local": {
            "type": "Identifier",
            "name": "SerializationError",
            "range": [
              234,
              252
            ],
            "loc": {
              "start": {
                "line": 10,
                "column": 7
              },
              "end": {
                "line": 10,
                "column": 25
              }
            }
          },
          "range": [
            234,
            252
          ],
          "loc": {
            "start": {
              "line": 10,
              "column": 7
            },
            "end": {
              "line": 10,
              "column": 25
            }
          }
        }
      ],
      "source": {
        "type": "Literal",
        "value": "./../Error/SerializationError",
        "raw": "'./../Error/SerializationError'",
        "range": [
          258,
          289
        ],
        "loc": {
          "start": {
            "line": 10,
            "column": 31
          },
          "end": {
            "line": 10,
            "column": 62
          }
        }
      },
      "range": [
        227,
        290
      ],
      "loc": {
        "start": {
          "line": 10,
          "column": 0
        },
        "end": {
          "line": 10,
          "column": 63
        }
      },
      "leadingComments": [
        {
          "type": "Block",
          "value": "\n * This file is part of the serializerjs package.\n *\n * (c) HAIRCVT <tfidry@haircvt.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n ",
          "range": [
            0,
            225
          ],
          "loc": {
            "start": {
              "line": 1,
              "column": 0
            },
            "end": {
              "line": 8,
              "column": 3
            }
          }
        }
      ]
    },
    {
      "type": "ImportDeclaration",
      "specifiers": [
        {
          "type": "ImportDefaultSpecifier",
          "local": {
            "type": "Identifier",
            "name": "UnimplementedMethodError",
            "range": [
              298,
              322
            ],
            "loc": {
              "start": {
                "line": 11,
                "column": 7
              },
              "end": {
                "line": 11,
                "column": 31
              }
            }
          },
          "range": [
            298,
            322
          ],
          "loc": {
            "start": {
              "line": 11,
              "column": 7
            },
            "end": {
              "line": 11,
              "column": 31
            }
          }
        }
      ],
      "source": {
        "type": "Literal",
        "value": "./../Error/UnimplementedMethodError",
        "raw": "'./../Error/UnimplementedMethodError'",
        "range": [
          328,
          365
        ],
        "loc": {
          "start": {
            "line": 11,
            "column": 37
          },
          "end": {
            "line": 11,
            "column": 74
          }
        }
      },
      "range": [
        291,
        366
      ],
      "loc": {
        "start": {
          "line": 11,
          "column": 0
        },
        "end": {
          "line": 11,
          "column": 75
        }
      },
      "trailingComments": [
        {
          "type": "Block",
          "value": "*\n * A serializer is responsible for transforming a data in a specific format into a data in another format.\n *\n * For example, the serializer can be used to map client-side models and back-end side objects by checking all the\n * properties of a model to generate an object for which the values are understandable for the back-end service.\n *\n * +--------+ ----- serialize -----> +----------+\n * | Client |                        | Back-End |\n * +--------+ <---- deserialize ---- +----------+\n *\n * Note that JavaScript does not support interfaces per se. By \"Interface\" is meant that this class should not implement\n * any method but provide the skeleton for child classes instead.\n *\n * @interface\n * @author ThÃ©o FIDRY <theo.fidry@gmail.com>\n ",
          "range": [
            368,
            1118
          ],
          "loc": {
            "start": {
              "line": 13,
              "column": 0
            },
            "end": {
              "line": 28,
              "column": 3
            }
          }
        }
      ]
    },
    {
      "type": "ExportDefaultDeclaration",
      "declaration": {
        "type": "ClassDeclaration",
        "id": {
          "type": "Identifier",
          "name": "SerializerInterface",
          "range": [
            1140,
            1159
          ],
          "loc": {
            "start": {
              "line": 29,
              "column": 21
            },
            "end": {
              "line": 29,
              "column": 40
            }
          }
        },
        "superClass": null,
        "body": {
          "type": "ClassBody",
          "body": [
            {
              "type": "MethodDefinition",
              "key": {
                "type": "Identifier",
                "name": "serialize",
                "range": [
                  1518,
                  1527
                ],
                "loc": {
                  "start": {
                    "line": 40,
                    "column": 4
                  },
                  "end": {
                    "line": 40,
                    "column": 13
                  }
                }
              },
              "value": {
                "type": "FunctionExpression",
                "id": null,
                "params": [
                  {
                    "type": "Identifier",
                    "name": "data",
                    "range": [
                      1528,
                      1532
                    ],
                    "loc": {
                      "start": {
                        "line": 40,
                        "column": 14
                      },
                      "end": {
                        "line": 40,
                        "column": 18
                      }
                    }
                  },
                  {
                    "type": "Identifier",
                    "name": "format",
                    "range": [
                      1534,
                      1540
                    ],
                    "loc": {
                      "start": {
                        "line": 40,
                        "column": 20
                      },
                      "end": {
                        "line": 40,
                        "column": 26
                      }
                    }
                  },
                  {
                    "type": "Identifier",
                    "name": "context",
                    "range": [
                      1542,
                      1549
                    ],
                    "loc": {
                      "start": {
                        "line": 40,
                        "column": 28
                      },
                      "end": {
                        "line": 40,
                        "column": 35
                      }
                    }
                  }
                ],
                "body": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "ThrowStatement",
                      "argument": {
                        "type": "NewExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "UnimplementedMethodError",
                          "range": [
                            1571,
                            1595
                          ],
                          "loc": {
                            "start": {
                              "line": 41,
                              "column": 18
                            },
                            "end": {
                              "line": 41,
                              "column": 42
                            }
                          }
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": "Unimplemented \"serialize()\" method",
                            "raw": "'Unimplemented \"serialize()\" method'",
                            "range": [
                              1596,
                              1632
                            ],
                            "loc": {
                              "start": {
                                "line": 41,
                                "column": 43
                              },
                              "end": {
                                "line": 41,
                                "column": 79
                              }
                            }
                          }
                        ],
                        "range": [
                          1567,
                          1633
                        ],
                        "loc": {
                          "start": {
                            "line": 41,
                            "column": 14
                          },
                          "end": {
                            "line": 41,
                            "column": 80
                          }
                        }
                      },
                      "range": [
                        1561,
                        1634
                      ],
                      "loc": {
                        "start": {
                          "line": 41,
                          "column": 8
                        },
                        "end": {
                          "line": 41,
                          "column": 81
                        }
                      }
                    }
                  ],
                  "range": [
                    1551,
                    1640
                  ],
                  "loc": {
                    "start": {
                      "line": 40,
                      "column": 37
                    },
                    "end": {
                      "line": 42,
                      "column": 5
                    }
                  }
                },
                "generator": false,
                "expression": false,
                "range": [
                  1527,
                  1640
                ],
                "loc": {
                  "start": {
                    "line": 40,
                    "column": 13
                  },
                  "end": {
                    "line": 42,
                    "column": 5
                  }
                }
              },
              "kind": "method",
              "computed": false,
              "range": [
                1518,
                1640
              ],
              "loc": {
                "start": {
                  "line": 40,
                  "column": 4
                },
                "end": {
                  "line": 42,
                  "column": 5
                }
              },
              "leadingComments": [
                {
                  "type": "Block",
                  "value": "*\n     * Serializes any data object into and object usable for the backend service.\n     *\n     * @param {*}      data    Any data\n     * @param {string} format  Format the normalization result will be encoded as\n     * @param {*}      context Options serializers have access to\n     *\n     * @return {*}\n     * @throw SerializationError\n     ",
                  "range": [
                    1166,
                    1513
                  ],
                  "loc": {
                    "start": {
                      "line": 30,
                      "column": 4
                    },
                    "end": {
                      "line": 39,
                      "column": 7
                    }
                  }
                }
              ],
              "trailingComments": [
                {
                  "type": "Block",
                  "value": "*\n     * Checks whether the given class is supported for serialization by this serializer.\n     *\n     * @param {*}      data          Any data\n     * @param {string} [format=null] Format the normalization result will be encoded as\n     *\n     * @return {boolean}\n     ",
                  "range": [
                    1646,
                    1919
                  ],
                  "loc": {
                    "start": {
                      "line": 44,
                      "column": 4
                    },
                    "end": {
                      "line": 51,
                      "column": 7
                    }
                  }
                }
              ],
              "static": false
            },
            {
              "type": "MethodDefinition",
              "key": {
                "type": "Identifier",
                "name": "supportsSerialize",
                "range": [
                  1924,
                  1941
                ],
                "loc": {
                  "start": {
                    "line": 52,
                    "column": 4
                  },
                  "end": {
                    "line": 52,
                    "column": 21
                  }
                }
              },
              "value": {
                "type": "FunctionExpression",
                "id": null,
                "params": [
                  {
                    "type": "Identifier",
                    "name": "data",
                    "range": [
                      1942,
                      1946
                    ],
                    "loc": {
                      "start": {
                        "line": 52,
                        "column": 22
                      },
                      "end": {
                        "line": 52,
                        "column": 26
                      }
                    }
                  },
                  {
                    "type": "AssignmentPattern",
                    "left": {
                      "type": "Identifier",
                      "name": "format",
                      "range": [
                        1948,
                        1954
                      ],
                      "loc": {
                        "start": {
                          "line": 52,
                          "column": 28
                        },
                        "end": {
                          "line": 52,
                          "column": 34
                        }
                      }
                    },
                    "right": {
                      "type": "Literal",
                      "value": null,
                      "raw": "null",
                      "range": [
                        1957,
                        1961
                      ],
                      "loc": {
                        "start": {
                          "line": 52,
                          "column": 37
                        },
                        "end": {
                          "line": 52,
                          "column": 41
                        }
                      }
                    },
                    "range": [
                      1948,
                      1961
                    ],
                    "loc": {
                      "start": {
                        "line": 52,
                        "column": 28
                      },
                      "end": {
                        "line": 52,
                        "column": 41
                      }
                    }
                  }
                ],
                "body": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "ThrowStatement",
                      "argument": {
                        "type": "NewExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "UnimplementedMethodError",
                          "range": [
                            1983,
                            2007
                          ],
                          "loc": {
                            "start": {
                              "line": 53,
                              "column": 18
                            },
                            "end": {
                              "line": 53,
                              "column": 42
                            }
                          }
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": "Unimplemented \"supportsSerialize()\" method",
                            "raw": "'Unimplemented \"supportsSerialize()\" method'",
                            "range": [
                              2008,
                              2052
                            ],
                            "loc": {
                              "start": {
                                "line": 53,
                                "column": 43
                              },
                              "end": {
                                "line": 53,
                                "column": 87
                              }
                            }
                          }
                        ],
                        "range": [
                          1979,
                          2053
                        ],
                        "loc": {
                          "start": {
                            "line": 53,
                            "column": 14
                          },
                          "end": {
                            "line": 53,
                            "column": 88
                          }
                        }
                      },
                      "range": [
                        1973,
                        2054
                      ],
                      "loc": {
                        "start": {
                          "line": 53,
                          "column": 8
                        },
                        "end": {
                          "line": 53,
                          "column": 89
                        }
                      }
                    }
                  ],
                  "range": [
                    1963,
                    2060
                  ],
                  "loc": {
                    "start": {
                      "line": 52,
                      "column": 43
                    },
                    "end": {
                      "line": 54,
                      "column": 5
                    }
                  }
                },
                "generator": false,
                "expression": false,
                "range": [
                  1941,
                  2060
                ],
                "loc": {
                  "start": {
                    "line": 52,
                    "column": 21
                  },
                  "end": {
                    "line": 54,
                    "column": 5
                  }
                }
              },
              "kind": "method",
              "computed": false,
              "range": [
                1924,
                2060
              ],
              "loc": {
                "start": {
                  "line": 52,
                  "column": 4
                },
                "end": {
                  "line": 54,
                  "column": 5
                }
              },
              "leadingComments": [
                {
                  "type": "Block",
                  "value": "*\n     * Checks whether the given class is supported for serialization by this serializer.\n     *\n     * @param {*}      data          Any data\n     * @param {string} [format=null] Format the normalization result will be encoded as\n     *\n     * @return {boolean}\n     ",
                  "range": [
                    1646,
                    1919
                  ],
                  "loc": {
                    "start": {
                      "line": 44,
                      "column": 4
                    },
                    "end": {
                      "line": 51,
                      "column": 7
                    }
                  }
                }
              ],
              "trailingComments": [
                {
                  "type": "Block",
                  "value": "*\n     * Deserializes data back into an object of the given class.\n     *\n     * @param {*}       data             Data to restore\n     * @param {string}  className        The expected class to instantiate\n     * @param {?string} [format=null]    Format the given data was extracted from\n     * @param {*}       [context=null]   Options available to the deserializer\n     *\n     * @return {*}\n     * @throw SerializationError\n     ",
                  "range": [
                    2066,
                    2501
                  ],
                  "loc": {
                    "start": {
                      "line": 56,
                      "column": 4
                    },
                    "end": {
                      "line": 66,
                      "column": 7
                    }
                  }
                }
              ],
              "static": false
            },
            {
              "type": "MethodDefinition",
              "key": {
                "type": "Identifier",
                "name": "deserialize",
                "range": [
                  2506,
                  2517
                ],
                "loc": {
                  "start": {
                    "line": 67,
                    "column": 4
                  },
                  "end": {
                    "line": 67,
                    "column": 15
                  }
                }
              },
              "value": {
                "type": "FunctionExpression",
                "id": null,
                "params": [
                  {
                    "type": "Identifier",
                    "name": "data",
                    "range": [
                      2518,
                      2522
                    ],
                    "loc": {
                      "start": {
                        "line": 67,
                        "column": 16
                      },
                      "end": {
                        "line": 67,
                        "column": 20
                      }
                    }
                  },
                  {
                    "type": "Identifier",
                    "name": "className",
                    "range": [
                      2524,
                      2533
                    ],
                    "loc": {
                      "start": {
                        "line": 67,
                        "column": 22
                      },
                      "end": {
                        "line": 67,
                        "column": 31
                      }
                    }
                  },
                  {
                    "type": "AssignmentPattern",
                    "left": {
                      "type": "Identifier",
                      "name": "format",
                      "range": [
                        2535,
                        2541
                      ],
                      "loc": {
                        "start": {
                          "line": 67,
                          "column": 33
                        },
                        "end": {
                          "line": 67,
                          "column": 39
                        }
                      }
                    },
                    "right": {
                      "type": "Literal",
                      "value": null,
                      "raw": "null",
                      "range": [
                        2544,
                        2548
                      ],
                      "loc": {
                        "start": {
                          "line": 67,
                          "column": 42
                        },
                        "end": {
                          "line": 67,
                          "column": 46
                        }
                      }
                    },
                    "range": [
                      2535,
                      2548
                    ],
                    "loc": {
                      "start": {
                        "line": 67,
                        "column": 33
                      },
                      "end": {
                        "line": 67,
                        "column": 46
                      }
                    }
                  },
                  {
                    "type": "AssignmentPattern",
                    "left": {
                      "type": "Identifier",
                      "name": "context",
                      "range": [
                        2550,
                        2557
                      ],
                      "loc": {
                        "start": {
                          "line": 67,
                          "column": 48
                        },
                        "end": {
                          "line": 67,
                          "column": 55
                        }
                      }
                    },
                    "right": {
                      "type": "Literal",
                      "value": null,
                      "raw": "null",
                      "range": [
                        2560,
                        2564
                      ],
                      "loc": {
                        "start": {
                          "line": 67,
                          "column": 58
                        },
                        "end": {
                          "line": 67,
                          "column": 62
                        }
                      }
                    },
                    "range": [
                      2550,
                      2564
                    ],
                    "loc": {
                      "start": {
                        "line": 67,
                        "column": 48
                      },
                      "end": {
                        "line": 67,
                        "column": 62
                      }
                    }
                  }
                ],
                "body": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "ThrowStatement",
                      "argument": {
                        "type": "NewExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "UnimplementedMethodError",
                          "range": [
                            2586,
                            2610
                          ],
                          "loc": {
                            "start": {
                              "line": 68,
                              "column": 18
                            },
                            "end": {
                              "line": 68,
                              "column": 42
                            }
                          }
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": "Unimplemented \"deserialize()\" method",
                            "raw": "'Unimplemented \"deserialize()\" method'",
                            "range": [
                              2611,
                              2649
                            ],
                            "loc": {
                              "start": {
                                "line": 68,
                                "column": 43
                              },
                              "end": {
                                "line": 68,
                                "column": 81
                              }
                            }
                          }
                        ],
                        "range": [
                          2582,
                          2650
                        ],
                        "loc": {
                          "start": {
                            "line": 68,
                            "column": 14
                          },
                          "end": {
                            "line": 68,
                            "column": 82
                          }
                        }
                      },
                      "range": [
                        2576,
                        2651
                      ],
                      "loc": {
                        "start": {
                          "line": 68,
                          "column": 8
                        },
                        "end": {
                          "line": 68,
                          "column": 83
                        }
                      }
                    }
                  ],
                  "range": [
                    2566,
                    2657
                  ],
                  "loc": {
                    "start": {
                      "line": 67,
                      "column": 64
                    },
                    "end": {
                      "line": 69,
                      "column": 5
                    }
                  }
                },
                "generator": false,
                "expression": false,
                "range": [
                  2517,
                  2657
                ],
                "loc": {
                  "start": {
                    "line": 67,
                    "column": 15
                  },
                  "end": {
                    "line": 69,
                    "column": 5
                  }
                }
              },
              "kind": "method",
              "computed": false,
              "range": [
                2506,
                2657
              ],
              "loc": {
                "start": {
                  "line": 67,
                  "column": 4
                },
                "end": {
                  "line": 69,
                  "column": 5
                }
              },
              "leadingComments": [
                {
                  "type": "Block",
                  "value": "*\n     * Deserializes data back into an object of the given class.\n     *\n     * @param {*}       data             Data to restore\n     * @param {string}  className        The expected class to instantiate\n     * @param {?string} [format=null]    Format the given data was extracted from\n     * @param {*}       [context=null]   Options available to the deserializer\n     *\n     * @return {*}\n     * @throw SerializationError\n     ",
                  "range": [
                    2066,
                    2501
                  ],
                  "loc": {
                    "start": {
                      "line": 56,
                      "column": 4
                    },
                    "end": {
                      "line": 66,
                      "column": 7
                    }
                  }
                }
              ],
              "trailingComments": [
                {
                  "type": "Block",
                  "value": "*\n     * Checks whether the given class is supported for deserialization by this serializer.\n     *\n     * @param {*}       data          Data to restore\n     * @param {string}  className     The expected class to instantiate\n     * @param {?string} [format=null] Format the given data was extracted from\n     *\n     * @return {boolean}\n     ",
                  "range": [
                    2663,
                    3009
                  ],
                  "loc": {
                    "start": {
                      "line": 71,
                      "column": 4
                    },
                    "end": {
                      "line": 79,
                      "column": 7
                    }
                  }
                }
              ],
              "static": false
            },
            {
              "type": "MethodDefinition",
              "key": {
                "type": "Identifier",
                "name": "supportsDeserialize",
                "range": [
                  3014,
                  3033
                ],
                "loc": {
                  "start": {
                    "line": 80,
                    "column": 4
                  },
                  "end": {
                    "line": 80,
                    "column": 23
                  }
                }
              },
              "value": {
                "type": "FunctionExpression",
                "id": null,
                "params": [
                  {
                    "type": "Identifier",
                    "name": "data",
                    "range": [
                      3034,
                      3038
                    ],
                    "loc": {
                      "start": {
                        "line": 80,
                        "column": 24
                      },
                      "end": {
                        "line": 80,
                        "column": 28
                      }
                    }
                  },
                  {
                    "type": "Identifier",
                    "name": "className",
                    "range": [
                      3040,
                      3049
                    ],
                    "loc": {
                      "start": {
                        "line": 80,
                        "column": 30
                      },
                      "end": {
                        "line": 80,
                        "column": 39
                      }
                    }
                  },
                  {
                    "type": "AssignmentPattern",
                    "left": {
                      "type": "Identifier",
                      "name": "format",
                      "range": [
                        3051,
                        3057
                      ],
                      "loc": {
                        "start": {
                          "line": 80,
                          "column": 41
                        },
                        "end": {
                          "line": 80,
                          "column": 47
                        }
                      }
                    },
                    "right": {
                      "type": "Literal",
                      "value": null,
                      "raw": "null",
                      "range": [
                        3060,
                        3064
                      ],
                      "loc": {
                        "start": {
                          "line": 80,
                          "column": 50
                        },
                        "end": {
                          "line": 80,
                          "column": 54
                        }
                      }
                    },
                    "range": [
                      3051,
                      3064
                    ],
                    "loc": {
                      "start": {
                        "line": 80,
                        "column": 41
                      },
                      "end": {
                        "line": 80,
                        "column": 54
                      }
                    }
                  }
                ],
                "body": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "ThrowStatement",
                      "argument": {
                        "type": "NewExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "UnimplementedMethodError",
                          "range": [
                            3086,
                            3110
                          ],
                          "loc": {
                            "start": {
                              "line": 81,
                              "column": 18
                            },
                            "end": {
                              "line": 81,
                              "column": 42
                            }
                          }
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": "Unimplemented \"supportsDeserialize()\" method",
                            "raw": "'Unimplemented \"supportsDeserialize()\" method'",
                            "range": [
                              3111,
                              3157
                            ],
                            "loc": {
                              "start": {
                                "line": 81,
                                "column": 43
                              },
                              "end": {
                                "line": 81,
                                "column": 89
                              }
                            }
                          }
                        ],
                        "range": [
                          3082,
                          3158
                        ],
                        "loc": {
                          "start": {
                            "line": 81,
                            "column": 14
                          },
                          "end": {
                            "line": 81,
                            "column": 90
                          }
                        }
                      },
                      "range": [
                        3076,
                        3159
                      ],
                      "loc": {
                        "start": {
                          "line": 81,
                          "column": 8
                        },
                        "end": {
                          "line": 81,
                          "column": 91
                        }
                      }
                    }
                  ],
                  "range": [
                    3066,
                    3165
                  ],
                  "loc": {
                    "start": {
                      "line": 80,
                      "column": 56
                    },
                    "end": {
                      "line": 82,
                      "column": 5
                    }
                  }
                },
                "generator": false,
                "expression": false,
                "range": [
                  3033,
                  3165
                ],
                "loc": {
                  "start": {
                    "line": 80,
                    "column": 23
                  },
                  "end": {
                    "line": 82,
                    "column": 5
                  }
                }
              },
              "kind": "method",
              "computed": false,
              "range": [
                3014,
                3165
              ],
              "loc": {
                "start": {
                  "line": 80,
                  "column": 4
                },
                "end": {
                  "line": 82,
                  "column": 5
                }
              },
              "leadingComments": [
                {
                  "type": "Block",
                  "value": "*\n     * Checks whether the given class is supported for deserialization by this serializer.\n     *\n     * @param {*}       data          Data to restore\n     * @param {string}  className     The expected class to instantiate\n     * @param {?string} [format=null] Format the given data was extracted from\n     *\n     * @return {boolean}\n     ",
                  "range": [
                    2663,
                    3009
                  ],
                  "loc": {
                    "start": {
                      "line": 71,
                      "column": 4
                    },
                    "end": {
                      "line": 79,
                      "column": 7
                    }
                  }
                }
              ],
              "static": false
            }
          ],
          "range": [
            1160,
            3167
          ],
          "loc": {
            "start": {
              "line": 29,
              "column": 41
            },
            "end": {
              "line": 83,
              "column": 1
            }
          }
        },
        "range": [
          1134,
          3167
        ],
        "loc": {
          "start": {
            "line": 29,
            "column": 15
          },
          "end": {
            "line": 83,
            "column": 1
          }
        },
        "leadingComments": [
          {
            "type": "Block",
            "value": "*\n * A serializer is responsible for transforming a data in a specific format into a data in another format.\n *\n * For example, the serializer can be used to map client-side models and back-end side objects by checking all the\n * properties of a model to generate an object for which the values are understandable for the back-end service.\n *\n * +--------+ ----- serialize -----> +----------+\n * | Client |                        | Back-End |\n * +--------+ <---- deserialize ---- +----------+\n *\n * Note that JavaScript does not support interfaces per se. By \"Interface\" is meant that this class should not implement\n * any method but provide the skeleton for child classes instead.\n *\n * @interface\n * @author ThÃ©o FIDRY <theo.fidry@gmail.com>\n ",
            "range": [
              368,
              1118
            ],
            "loc": {
              "start": {
                "line": 13,
                "column": 0
              },
              "end": {
                "line": 28,
                "column": 3
              }
            }
          }
        ],
        "trailingComments": []
      },
      "range": [
        1119,
        3167
      ],
      "loc": {
        "start": {
          "line": 29,
          "column": 0
        },
        "end": {
          "line": 83,
          "column": 1
        }
      },
      "leadingComments": [
        {
          "type": "Block",
          "value": "*\n * A serializer is responsible for transforming a data in a specific format into a data in another format.\n *\n * For example, the serializer can be used to map client-side models and back-end side objects by checking all the\n * properties of a model to generate an object for which the values are understandable for the back-end service.\n *\n * +--------+ ----- serialize -----> +----------+\n * | Client |                        | Back-End |\n * +--------+ <---- deserialize ---- +----------+\n *\n * Note that JavaScript does not support interfaces per se. By \"Interface\" is meant that this class should not implement\n * any method but provide the skeleton for child classes instead.\n *\n * @interface\n * @author ThÃ©o FIDRY <theo.fidry@gmail.com>\n ",
          "range": [
            368,
            1118
          ],
          "loc": {
            "start": {
              "line": 13,
              "column": 0
            },
            "end": {
              "line": 28,
              "column": 3
            }
          }
        }
      ]
    }
  ],
  "sourceType": "module",
  "range": [
    227,
    3167
  ],
  "loc": {
    "start": {
      "line": 10,
      "column": 0
    },
    "end": {
      "line": 83,
      "column": 1
    }
  },
  "comments": [
    {
      "type": "Block",
      "value": "\n * This file is part of the serializerjs package.\n *\n * (c) HAIRCVT <tfidry@haircvt.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n ",
      "range": [
        0,
        225
      ],
      "loc": {
        "start": {
          "line": 1,
          "column": 0
        },
        "end": {
          "line": 8,
          "column": 3
        }
      }
    },
    {
      "type": "Block",
      "value": "*\n * A serializer is responsible for transforming a data in a specific format into a data in another format.\n *\n * For example, the serializer can be used to map client-side models and back-end side objects by checking all the\n * properties of a model to generate an object for which the values are understandable for the back-end service.\n *\n * +--------+ ----- serialize -----> +----------+\n * | Client |                        | Back-End |\n * +--------+ <---- deserialize ---- +----------+\n *\n * Note that JavaScript does not support interfaces per se. By \"Interface\" is meant that this class should not implement\n * any method but provide the skeleton for child classes instead.\n *\n * @interface\n * @author ThÃ©o FIDRY <theo.fidry@gmail.com>\n ",
      "range": [
        368,
        1118
      ],
      "loc": {
        "start": {
          "line": 13,
          "column": 0
        },
        "end": {
          "line": 28,
          "column": 3
        }
      }
    },
    {
      "type": "Block",
      "value": "*\n     * Serializes any data object into and object usable for the backend service.\n     *\n     * @param {*}      data    Any data\n     * @param {string} format  Format the normalization result will be encoded as\n     * @param {*}      context Options serializers have access to\n     *\n     * @return {*}\n     * @throw SerializationError\n     ",
      "range": [
        1166,
        1513
      ],
      "loc": {
        "start": {
          "line": 30,
          "column": 4
        },
        "end": {
          "line": 39,
          "column": 7
        }
      }
    },
    {
      "type": "Block",
      "value": "*\n     * Checks whether the given class is supported for serialization by this serializer.\n     *\n     * @param {*}      data          Any data\n     * @param {string} [format=null] Format the normalization result will be encoded as\n     *\n     * @return {boolean}\n     ",
      "range": [
        1646,
        1919
      ],
      "loc": {
        "start": {
          "line": 44,
          "column": 4
        },
        "end": {
          "line": 51,
          "column": 7
        }
      }
    },
    {
      "type": "Block",
      "value": "*\n     * Deserializes data back into an object of the given class.\n     *\n     * @param {*}       data             Data to restore\n     * @param {string}  className        The expected class to instantiate\n     * @param {?string} [format=null]    Format the given data was extracted from\n     * @param {*}       [context=null]   Options available to the deserializer\n     *\n     * @return {*}\n     * @throw SerializationError\n     ",
      "range": [
        2066,
        2501
      ],
      "loc": {
        "start": {
          "line": 56,
          "column": 4
        },
        "end": {
          "line": 66,
          "column": 7
        }
      }
    },
    {
      "type": "Block",
      "value": "*\n     * Checks whether the given class is supported for deserialization by this serializer.\n     *\n     * @param {*}       data          Data to restore\n     * @param {string}  className     The expected class to instantiate\n     * @param {?string} [format=null] Format the given data was extracted from\n     *\n     * @return {boolean}\n     ",
      "range": [
        2663,
        3009
      ],
      "loc": {
        "start": {
          "line": 71,
          "column": 4
        },
        "end": {
          "line": 79,
          "column": 7
        }
      }
    }
  ]
}